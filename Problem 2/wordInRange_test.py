'''exceptionHandling
Test cases for the seasons module.
'''
import wordInRange as wordInRange

ERROR_MSG = "Verify that the program is correctly incrementing the age of each person."
class TestClass:
    def test_one(self,monkeypatch,capsys):

        # monkeypatch the "input" function, so that it returns "Mark".
        # This simulates the user entering "Mark" in the terminal:
        inputs = iter(["Problem 2\input1.txt","ammoniated","millennium"])
        monkeypatch.setattr('builtins.input', lambda: next(inputs, '\n'))

        # go about using input() like you normally would:
        wordInRange.wordInRange()
        captured = capsys.readouterr()
        all_outputs = captured.out
        assert all(x in all_outputs for x in ["aspiration - in range",
            "classified - in range",
            "federation - in range",
            "graduation - in range",
            "millennium - in range",
            "philosophy - not in range",
            "quadratics - not in range",
            "transcript - not in range",
            "wilderness - not in range",
            "zoologists - not in range"]), ERROR_MSG
        
    def test_two(self,monkeypatch,capsys):

        # monkeypatch the "input" function, so that it returns "Mark".
        # This simulates the user entering "Mark" in the terminal:
        inputs = iter(["Problem 2\input1.txt","antheridia","holofernes"])
        monkeypatch.setattr('builtins.input', lambda: next(inputs, '\n'))

        # go about using input() like you normally would:
        wordInRange.wordInRange()
        captured = capsys.readouterr()
        all_outputs = captured.out
        assert all(x in all_outputs for x in ["aspiration - in range",
            "classified - in range",
            "federation - in range",
            "graduation - in range",
            "millennium - not in range",
            "philosophy - not in range",
            "quadratics - not in range",
            "transcript - not in range",
            "wilderness - not in range",
            "zoologists - not in range"]), ERROR_MSG

    def test_three(self,monkeypatch,capsys):

        # monkeypatch the "input" function, so that it returns "Mark".
        # This simulates the user entering "Mark" in the terminal:
        inputs = iter(["Problem 2\input2.txt","adrianople","misopaedia"])
        monkeypatch.setattr('builtins.input', lambda: next(inputs, '\n'))

        # go about using input() like you normally would:
        wordInRange.wordInRange()
        captured = capsys.readouterr()
        all_outputs = captured.out
        assert all(x in all_outputs for x in ["acromicria - not in range",
            "acronymous - not in range",
            "attractant - in range",
            "backblocks - in range",
            "bladderpod - in range",
            "brownnosed - in range",
            "burglarise - in range",
            "busybodies - in range",
            "economiser - in range",
            "equanimous - in range",
            "escarpment - in range",
            "exfoliated - in range",
            "extemporal - in range",
            "glochidial - in range",
            "glomerular - in range",
            "gloucester - in range",
            "gorgonised - in range",
            "grandmamma - in range",
            "haeckelism - in range",
            "headphones - in range",
            "ignorantly - in range",
            "impassable - in range",
            "impishness - in range",
            "intermalar - in range",
            "jacobethan - in range",
            "japanesque - in range",
            "jubilation - in range",
            "narcissist - not in range",
            "neoplastic - not in range",
            "nominalist - not in range",
            "nontrunked - not in range",
            "nunciature - not in range",
            "oblongness - not in range",
            "outlipping - not in range",
            "outsnoring - not in range",
            "overdosage - not in range",
            "overharden - not in range",
            "phenacetin - not in range",
            "pluraliser - not in range",
            "poeticised - not in range",
            "predefying - not in range",
            "predestine - not in range",
            "quadriceps - not in range",
            "quantified - not in range",
            "quaternary - not in range",
            "quietistic - not in range",
            "quinoidine - not in range",
            "transcribe - not in range",
            "ultrafiche - not in range",
            "unprofaned - not in range",
            "urogomphus - not in range",
            "vallecular - not in range",
            "vinylating - not in range",
            "violescent - not in range",
            "viscountcy - not in range",
            "vitalizing - not in range",
            "weaponshaw - not in range",
            "winkelried - not in range",
            "xenophobic - not in range",
            "xiphosuran - not in range",
            "zeffirelli - not in range",
            "zoophilism - not in range"]), ERROR_MSG

    def test_four(self,monkeypatch,capsys):

        # monkeypatch the "input" function, so that it returns "Mark".
        # This simulates the user entering "Mark" in the terminal:
        inputs = inputs = iter(["Problem 2\input2.txt","charcutier","winkelried"])
        monkeypatch.setattr('builtins.input', lambda: next(inputs, '\n'))

        # go about using input() like you normally would:
        wordInRange.wordInRange()
        captured = capsys.readouterr()
        all_outputs = captured.out
        assert all(x in all_outputs for x in ["acromicria - not in range",
            "acronymous - not in range",
            "attractant - not in range",
            "backblocks - not in range",
            "bladderpod - not in range",
            "brownnosed - not in range",
            "burglarise - not in range",
            "busybodies - not in range",
            "economiser - in range",
            "equanimous - in range",
            "escarpment - in range",
            "exfoliated - in range",
            "extemporal - in range",
            "glochidial - in range",
            "glomerular - in range",
            "gloucester - in range",
            "gorgonised - in range",
            "grandmamma - in range",
            "haeckelism - in range",
            "headphones - in range",
            "ignorantly - in range",
            "impassable - in range",
            "impishness - in range",
            "intermalar - in range",
            "jacobethan - in range",
            "japanesque - in range",
            "jubilation - in range",
            "narcissist - in range",
            "neoplastic - in range",
            "nominalist - in range",
            "nontrunked - in range",
            "nunciature - in range",
            "oblongness - in range",
            "outlipping - in range",
            "outsnoring - in range",
            "overdosage - in range",
            "overharden - in range",
            "phenacetin - in range",
            "pluraliser - in range",
            "poeticised - in range",
            "predefying - in range",
            "predestine - in range",
            "quadriceps - in range",
            "quantified - in range",
            "quaternary - in range",
            "quietistic - in range",
            "quinoidine - in range",
            "transcribe - in range",
            "ultrafiche - in range",
            "unprofaned - in range",
            "urogomphus - in range",
            "vallecular - in range",
            "vinylating - in range",
            "violescent - in range",
            "viscountcy - in range",
            "vitalizing - in range",
            "weaponshaw - in range",
            "winkelried - in range",
            "xenophobic - not in range",
            "xiphosuran - not in range",
            "zeffirelli - not in range",
            "zoophilism - not in range"]), ERROR_MSG
        
    def test_five(self,monkeypatch,capsys):

        # monkeypatch the "input" function, so that it returns "Mark".
        # This simulates the user entering "Mark" in the terminal:
        inputs = inputs = iter(["Problem 2\input3.txt","antipapism","queensland"])
        monkeypatch.setattr('builtins.input', lambda: next(inputs, '\n'))

        # go about using input() like you normally would:
        wordInRange.wordInRange()
        captured = capsys.readouterr()
        all_outputs = captured.out
        assert all(x in all_outputs for x in ["abdication - not in range",
        "abnegating - not in range",
        "abstersive - not in range",
        "analytical - not in range",
        "antimasker - not in range",
        "balneology - in range",
        "blandisher - in range",
        "bloomfield - in range",
        "boilerless - in range",
        "butterfish - in range",
        "cabalistic - in range",
        "castration - in range",
        "chasmogamy - in range",
        "cnidophore - in range",
        "corrientes - in range",
        "devocalise - in range",
        "dimerizing - in range",
        "dispraised - in range",
        "distillate - in range",
        "distortive - in range",
        "earthbound - in range",
        "encipherer - in range",
        "equipoised - in range",
        "evaluating - in range",
        "expurgated - in range",
        "facileness - in range",
        "farforthly - in range",
        "feebleness - in range",
        "filialness - in range",
        "foamflower - in range",
        "geniculate - in range",
        "gingersnap - in range",
        "gnosticize - in range",
        "goalkeeper - in range",
        "greenbrier - in range",
        "hardenable - in range",
        "harmlessly - in range",
        "harquebuss - in range",
        "hatshepset - in range",
        "hephaistos - in range",
        "incurrence - in range",
        "interceder - in range",
        "interferon - in range",
        "introspect - in range",
        "irishizing - in range",
        "janitorial - in range",
        "jarovizing - in range",
        "jawbreaker - in range",
        "journalese - in range",
        "juantorena - in range",
        "keratinise - in range",
        "khrushchev - in range",
        "kilmarnock - in range",
        "kilndrying - in range",
        "knockabout - in range",
        "latinizing - in range",
        "leucomaine - in range",
        "librettist - in range",
        "longstreet - in range",
        "lysistrata - in range",
        "matozinhos - in range",
        "mickiewicz - in range",
        "mixability - in range",
        "motherhood - in range",
        "mutilating - in range",
        "nephrocele - in range",
        "nettlelike - in range",
        "noncogency - in range",
        "nongenuine - in range",
        "nonswimmer - in range",
        "outroguing - in range",
        "outselling - in range",
        "overdilate - in range",
        "overseason - in range",
        "overstress - in range",
        "phenetidin - in range",
        "poulticing - in range",
        "presbyopia - in range",
        "prologuist - in range",
        "pseudocele - in range",
        "quadruplex - in range",
        "quantified - in range",
        "quathlamba - in range",
        "quinacrine - not in range",
        "quintuplet - not in range",
        "reaudition - not in range",
        "recreatory - not in range",
        "remobilize - not in range",
        "retroceded - not in range",
        "romanesque - not in range",
        "scraggiest - not in range",
        "stockiness - not in range",
        "superimply - not in range",
        "swearingly - not in range",
        "symbolical - not in range",
        "tallowlike - not in range",
        "throughout - not in range",
        "toastiness - not in range",
        "trigeminal - not in range",
        "trouvaille - not in range",
        "undercarry - not in range",
        "undrenched - not in range",
        "unfrazzled - not in range",
        "unreminded - not in range",
        "unsturdily - not in range",
        "vindictive - not in range",
        "vinylidene - not in range",
        "viscometer - not in range",
        "viscometry - not in range",
        "viviparous - not in range",
        "wapinschaw - not in range",
        "westwardly - not in range",
        "windowless - not in range",
        "winkelried - not in range",
        "womanising - not in range",
        "xanthophyl - not in range",
        "xenocrates - not in range",
        "xenolithic - not in range",
        "xylostroma - not in range",
        "xylotomous - not in range",
        "yarborough - not in range",
        "yeastiness - not in range",
        "yellowlegs - not in range",
        "yellowwood - not in range",
        "yonkersite - not in range",
        "zeffirelli - not in range",
        "zephyrinus - not in range",
        "zinckenite - not in range",
        "zoophilism - not in range",
        "zoophobous - not in range"]), ERROR_MSG
            

    def test_six(self,monkeypatch,capsys):

        # monkeypatch the "input" function, so that it returns "Mark".
        # This simulates the user entering "Mark" in the terminal:
        inputs = inputs = iter(["Problem 2\input3.txt","dimerizing","kilndrying"])
        monkeypatch.setattr('builtins.input', lambda: next(inputs, '\n'))

        # go about using input() like you normally would:
        wordInRange.wordInRange()
        captured = capsys.readouterr()
        all_outputs = captured.out
        assert all(x in all_outputs for x in ["abdication - not in range",
            "abnegating - not in range",
            "abstersive - not in range",
            "analytical - not in range",
            "antimasker - not in range",
            "balneology - not in range",
            "blandisher - not in range",
            "bloomfield - not in range",
            "boilerless - not in range",
            "butterfish - not in range",
            "cabalistic - not in range",
            "castration - not in range",
            "chasmogamy - not in range",
            "cnidophore - not in range",
            "corrientes - not in range",
            "devocalise - not in range",
            "dimerizing - in range",
            "dispraised - in range",
            "distillate - in range",
            "distortive - in range",
            "earthbound - in range",
            "encipherer - in range",
            "equipoised - in range",
            "evaluating - in range",
            "expurgated - in range",
            "facileness - in range",
            "farforthly - in range",
            "feebleness - in range",
            "filialness - in range",
            "foamflower - in range",
            "geniculate - in range",
            "gingersnap - in range",
            "gnosticize - in range",
            "goalkeeper - in range",
            "greenbrier - in range",
            "hardenable - in range",
            "harmlessly - in range",
            "harquebuss - in range",
            "hatshepset - in range",
            "hephaistos - in range",
            "incurrence - in range",
            "interceder - in range",
            "interferon - in range",
            "introspect - in range",
            "irishizing - in range",
            "janitorial - in range",
            "jarovizing - in range",
            "jawbreaker - in range",
            "journalese - in range",
            "juantorena - in range",
            "keratinise - in range",
            "khrushchev - in range",
            "kilmarnock - in range",
            "kilndrying - in range",
            "knockabout - not in range",
            "latinizing - not in range",
            "leucomaine - not in range",
            "librettist - not in range",
            "longstreet - not in range",
            "lysistrata - not in range",
            "matozinhos - not in range",
            "mickiewicz - not in range",
            "mixability - not in range",
            "motherhood - not in range",
            "mutilating - not in range",
            "nephrocele - not in range",
            "nettlelike - not in range",
            "noncogency - not in range",
            "nongenuine - not in range",
            "nonswimmer - not in range",
            "outroguing - not in range",
            "outselling - not in range",
            "overdilate - not in range",
            "overseason - not in range",
            "overstress - not in range",
            "phenetidin - not in range",
            "poulticing - not in range",
            "presbyopia - not in range",
            "prologuist - not in range",
            "pseudocele - not in range",
            "quadruplex - not in range",
            "quantified - not in range",
            "quathlamba - not in range",
            "quinacrine - not in range",
            "quintuplet - not in range",
            "reaudition - not in range",
            "recreatory - not in range",
            "remobilize - not in range",
            "retroceded - not in range",
            "romanesque - not in range",
            "scraggiest - not in range",
            "stockiness - not in range",
            "superimply - not in range",
            "swearingly - not in range",
            "symbolical - not in range",
            "tallowlike - not in range",
            "throughout - not in range",
            "toastiness - not in range",
            "trigeminal - not in range",
            "trouvaille - not in range",
            "undercarry - not in range",
            "undrenched - not in range",
            "unfrazzled - not in range",
            "unreminded - not in range",
            "unsturdily - not in range",
            "vindictive - not in range",
            "vinylidene - not in range",
            "viscometer - not in range",
            "viscometry - not in range",
            "viviparous - not in range",
            "wapinschaw - not in range",
            "westwardly - not in range",
            "windowless - not in range",
            "winkelried - not in range",
            "womanising - not in range",
            "xanthophyl - not in range",
            "xenocrates - not in range",
            "xenolithic - not in range",
            "xylostroma - not in range",
            "xylotomous - not in range",
            "yarborough - not in range",
            "yeastiness - not in range",
            "yellowlegs - not in range",
            "yellowwood - not in range",
            "yonkersite - not in range",
            "zeffirelli - not in range",
            "zephyrinus - not in range",
            "zinckenite - not in range",
            "zoophilism - not in range",
            "zoophobous - not in range"]), ERROR_MSG